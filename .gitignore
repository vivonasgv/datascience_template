# Binaries for programs and plugins
*.exe
*.exe~
*.dll
*.so
*.dylib
__pycache__/
*.py[cod]

# Test binary, built with `go test -c`
*.test

# Output of the go coverage tool, specifically when used with LiteIDE
*.out

# Others
*.swp
.DS_Store

### Terraform
###

# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log

# Ignore any .tfvars files that are generated automatically for each Terraform run. Most
# .tfvars files are managed as part of configuration and so should be included in
# version control.
#
# example.tfvars

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
#
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

###
### Kind
###
/deployments/terraform/kind/*/*config

# tmp output (used by Kind node volume mount)
test/data/output/*
# localstack
test/data/localstack/*
# minio
test/data/minio/data/*
# notebook
.ipynb_checkpoints
test/data/notebook/spark-delta/*.log
# db
test/data/db/*
# presto
test/data/presto/*

###
### Vim
###

# Swap
[._]*.s[a-v][a-z]
[._]*.sw[a-p]
[._]s[a-rt-v][a-z]
[._]ss[a-gi-z]
[._]sw[a-p]

###
### General
###

# Runtime data
pids
*.pid
*.seed
*.pid.lock
*.tfstate
.terraform

# pip environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# mlflow related files
mlruns

# VSCode
.vscode

# Ignore generated module job YAMLs
module-job.yaml